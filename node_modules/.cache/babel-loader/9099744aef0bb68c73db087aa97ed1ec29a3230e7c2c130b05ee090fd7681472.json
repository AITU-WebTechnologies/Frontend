{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject"],"sources":["C:/Users/eseri/OneDrive/Рабочий стол/frontend/src/configurations/instance.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:5000/api'\r\n});\r\n\r\naxiosInstance.interceptors.request.use( \r\n  config => { const token = localStorage.getItem('token'); \r\n    if (token) { \r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n   } \r\n   return config; \r\n  }, \r\n  error => {\r\n     return Promise.reject(error); \r\n    } );\r\n\r\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAI;EAAE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACrD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACtD;EACA,OAAOD,MAAM;AACd,CAAC,EACDK,KAAK,IAAI;EACN,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC7B,CAAE,CAAC;AAEP,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}